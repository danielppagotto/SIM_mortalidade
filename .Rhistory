if (!require(RODBC)) { install.packages(RODBC); require(RODBC) }
dremio_host <- "200.137.215.27"
dremio_port <- "31010"
dremio_uid <- "daniel"
dremio_pwd <- "p7USWgsqaEH3CWe"
channel <- odbcDriverConnect(sprintf("DRIVER=Dremio Connector;HOST=%s;PORT=%s;UID=%s;PWD=%s;AUTHENTICATIONTYPE=Basic Authentication;CONNECTIONTYPE=Direct", dremio_host, dremio_port, dremio_uid, dremio_pwd))
sim19 <- sqlQuery(channel, "SELECT TIPOBITO, DTOBITO, DTNASC, IDADE, SEXO,
CODMUNRES, CAUSABAS, uf, competencia
FROM Dados.sim.DO
WHERE competencia = 2019")
cid10 <- sqlQuery(channel, 'SELECT COD_SUBCAT, CAPITULO FROM "cid_10.csv"')
cid10 <- sqlQuery(channel, 'SELECT COD_SUBCAT, CAPITULO FROM "cid_10.csv"')
cid10 <- sqlQuery(channel, 'SELECT COD_SUBCAT, CAPITULO FROM Dados.cid."cid_10.csv"')
cid10 <- sqlQuery(channel, 'SELECT COD_SUBCAT, CAPITULO FROM Dados.cid."cid_10.csv"')
populacao_regiao <- sqlQuery(channel, 'SELECT * FROM "População por Região e Ano"')
cid10 <- sqlQuery(channel, 'SELECT COD_SUBCAT, CAPITULO FROM Dados.cid."cid_10.csv"')
populacao_regiao <- sqlQuery(channel, 'SELECT * FROM "Analytics Layer".Territorial."População por Região e Ano"')
sim20 <- sqlQuery(channel, 'SELECT  TIPOBITO, DTOBITO, DTNASC, IDADE, SEXO, CODMUNRES, CAUSABAS
FROM Dados.sim.preliminar."2020"')
sim21 <- sqlQuery(channel, 'SELECT  TIPOBITO, DTOBITO, DTNASC, IDADE, SEXO, CODMUNRES, CAUSABAS
FROM Dados.sim.preliminar."2021.parquet"')
View(sim19)
cid10 <- sqlQuery(channel, 'SELECT COD_SUBCAT, CAPITULO FROM Dados.cid."cid_10.csv"')
populacao_regiao <- sqlQuery(channel, 'SELECT * FROM "Analytics Layer".Territorial."População por Região e Ano"')
pop20 <- populacao_regiao %>% filter(ANO == 2020)
library(tidyverse)
cid10 <- sqlQuery(channel, 'SELECT COD_SUBCAT, CAPITULO FROM Dados.cid."cid_10.csv"')
populacao_regiao <- sqlQuery(channel, 'SELECT * FROM "Analytics Layer".Territorial."População por Região e Ano"')
pop20 <- populacao_regiao %>% filter(ANO == 2020)
pop19 <- populacao_regiao %>% filter(ANO == 2019)
sim19_t <- sim19 %>%
janitor::clean_names() %>%
mutate(ano = 2019) %>%
group_by(codmunres, causabas, ano) %>%
summarize(obitos = n())
View(sim19_t)
sim19_t <- sim19 %>%
janitor::clean_names() %>%
mutate(ano = 2019) %>%
left_join(cid10, by = c("causabas" = "COD_SUBCAT"))
group_by(codmunres, causabas, ano) %>%
summarize(obitos = n())
View(sim19_t)
group_by(codmunres, CAPITULO, ano) %>%
summarize(obitos = n()) %>%
janitor::clean_names()
sim19_t <- sim19 %>%
janitor::clean_names() %>%
rename(ano = competencia) %>%
left_join(cid10, by = c("causabas" = "COD_SUBCAT"))
group_by(codmunres, CAPITULO, ano) %>%
summarize(obitos = n()) %>%
janitor::clean_names()
sim19_t <- sim19 %>%
janitor::clean_names() %>%
rename(ano = competencia) %>%
left_join(cid10, by = c("causabas" = "COD_SUBCAT")) %>%
group_by(codmunres, CAPITULO, ano) %>%
summarize(obitos = n()) %>%
janitor::clean_names()
sim19_t <- sim19 %>%
janitor::clean_names() %>%
rename(ano = competencia) %>%
mutate(regiao = str_sub(codmunres, 1, 1)) %>%
left_join(cid10, by = c("causabas" = "COD_SUBCAT")) %>%
group_by(regiao, CAPITULO, ano) %>%
summarize(obitos = n()) %>%
janitor::clean_names()
View(sim19_t)
sim19_t <- sim19 %>%
janitor::clean_names() %>%
rename(ano = competencia) %>%
mutate(regiao = str_sub(codmunres, 1, 1)) %>%
left_join(cid10, by = c("causabas" = "COD_SUBCAT")) %>%
group_by(regiao, CAPITULO, ano) %>%
summarize(obitos = n()) %>%
janitor::clean_names() %>%
left_join(pop19, by = c("regiao" = "cod_regiao")) %>%
mutate(taxa = (obitos/pop) * 100000)
cid10 <- sqlQuery(channel, 'SELECT COD_SUBCAT, CAPITULO FROM Dados.cid."cid_10.csv"')
populacao_regiao <- sqlQuery(channel, 'SELECT * FROM "Analytics Layer".Territorial."População por Região e Ano"')
pop20 <- populacao_regiao %>% filter(ANO == 2020) %>%  mutate(cod_regiao = as.character(cod_regiao))
pop19 <- populacao_regiao %>% filter(ANO == 2019) %>%  mutate(cod_regiao = as.character(cod_regiao))
sim19_t <- sim19 %>%
janitor::clean_names() %>%
rename(ano = competencia) %>%
mutate(regiao = str_sub(codmunres, 1, 1)) %>%
left_join(cid10, by = c("causabas" = "COD_SUBCAT")) %>%
group_by(regiao, CAPITULO, ano) %>%
summarize(obitos = n()) %>%
janitor::clean_names() %>%
left_join(pop19, by = c("regiao" = "cod_regiao")) %>%
mutate(taxa = (obitos/pop) * 100000)
library(tidyverse)
options(scipen = 999)
View(sim19_t)
sim20_t <- sim20 %>%
janitor::clean_names() %>%
mutate(ano = 2020) %>%
mutate(regiao = str_sub(codmunres, 1, 1)) %>%
left_join(cid10, by = c("causabas" = "COD_SUBCAT")) %>%
group_by(regiao, CAPITULO, ano) %>%
summarize(obitos = n()) %>%
janitor::clean_names() %>%
left_join(pop19, by = c("regiao" = "cod_regiao")) %>%
mutate(taxa = (obitos/pop) * 100000)
sim20_t <- sim20 %>%
janitor::clean_names() %>%
mutate(ano = 2020) %>%
mutate(regiao = str_sub(codmunres, 1, 1)) %>%
left_join(cid10, by = c("causabas" = "COD_SUBCAT")) %>%
group_by(regiao, CAPITULO, ano) %>%
summarize(obitos = n()) %>%
janitor::clean_names() %>%
left_join(pop20, by = c("regiao" = "cod_regiao")) %>%
mutate(taxa = (obitos/pop) * 100000)
View(sim20_t)
View(sim20)
cid10 <- sqlQuery(channel, 'SELECT COD_SUBCAT, CAPITULO, COD_CAT FROM Dados.cid."cid_10.csv"')
populacao_regiao <- sqlQuery(channel, 'SELECT * FROM "Analytics Layer".Territorial."População por Região e Ano"')
pop20 <- populacao_regiao %>% filter(ANO == 2020) %>%  mutate(cod_regiao = as.character(cod_regiao))
pop19 <- populacao_regiao %>% filter(ANO == 2019) %>%  mutate(cod_regiao = as.character(cod_regiao))
sim20_t <- sim20 %>%
janitor::clean_names() %>%
mutate(ano = 2020,
regiao = str_sub(codmunres, 1, 1),
cod_cat = str_sub(causabas, 1, 3)) %>%
left_join(cid10, by = c("cod_cat" = "COD_CAT")) %>%
group_by(regiao, CAPITULO, ano) %>%
summarize(obitos = n()) %>%
janitor::clean_names() %>%
left_join(pop20, by = c("regiao" = "cod_regiao")) %>%
mutate(taxa = (obitos/pop) * 100000)
View(sim20_t)
sim21_t <- sim21 %>%
janitor::clean_names() %>%
mutate(ano = 2021,
regiao = str_sub(codmunres, 1, 1),
cod_cat = str_sub(causabas, 1, 3)) %>%
left_join(cid10, by = c("cod_cat" = "COD_CAT")) %>%
group_by(regiao, CAPITULO, ano) %>%
summarize(obitos = n()) %>%
janitor::clean_names() %>%
left_join(pop20, by = c("regiao" = "cod_regiao")) %>%
mutate(taxa = (obitos/pop) * 100000)
sim_regioes <- rbind(sim19_t, sim20_t, sim21_t)
View(sim_regioes)
sim_regioes %>%
ggplot(aes(x = ano, y = taxa, col = regiao_pad)) + geom_line() +
facet_wrap(~capitulo)
View(sim_regioes)
sim_regioes <- rbind(sim19_t, sim20_t, sim21_t) %>% filter(capitulo != "NA")
sim_regioes %>%
ggplot(aes(x = ano, y = taxa, col = regiao_pad)) + geom_line() +
facet_wrap(~capitulo)
sim_regioes %>%
ggplot(aes(x = ano, y = taxa, col = regiao_pad)) + geom_line() +
facet_wrap(~capitulo) + scale_x_continuous(breaks = seq(2019,2021,1)) +
theme_minimal()
sim_regioes %>%
ggplot(aes(x = ano, y = taxa, col = regiao_pad)) + geom_line() +
facet_wrap(~capitulo) + scale_x_continuous(breaks = seq(2019,2021,1)) +
theme_minimal() + theme(legend.position = "bottom")
sim_regioes %>%
ggplot(aes(x = ano, y = taxa, col = regiao_pad)) + geom_line() +
facet_wrap(~capitulo, scales = "free_y") + scale_x_continuous(breaks = seq(2019,2021,1)) +  theme_minimal() + theme(legend.position = "bottom")
sim_regioes %>%
ggplot(aes(x = ano, y = taxa, col = regiao_pad)) + geom_line() +
facet_wrap(~capitulo, scales = "free_y", nrow = 2) + scale_x_continuous(breaks = seq(2019,2021,1)) +  theme_minimal() + theme(legend.position = "bottom")
sim_regioes %>%
ggplot(aes(x = ano, y = taxa, col = regiao_pad)) + geom_line() +
facet_wrap(~capitulo, scales = "free_y", ncol = 2) + scale_x_continuous(breaks = seq(2019,2021,1)) +  theme_minimal() + theme(legend.position = "bottom")
sim_regioes %>%
ggplot(aes(x = ano, y = taxa, col = regiao_pad)) + geom_line() +
facet_wrap(~capitulo, scales = "free_y", ncol = 4) + scale_x_continuous(breaks = seq(2019,2021,1)) +  theme_minimal() + theme(legend.position = "bottom")
sim_regioes %>%
ggplot(aes(x = ano, y = taxa, col = regiao_pad)) + geom_line() +
facet_wrap(~capitulo, scales = "free_y", ncol = 3) + scale_x_continuous(breaks = seq(2019,2021,1)) +  theme_minimal() + theme(legend.position = "bottom")
sim_regioes %>%
ggplot(aes(x = ano, y = taxa, col = regiao_pad)) + geom_line() +
facet_wrap(~capitulo, scales = "free_y", ncol = 4) + scale_x_continuous(breaks = seq(2019,2021,1)) +  theme_minimal() + theme(legend.position = "bottom")
sim_regioes %>%
ggplot(aes(x = ano, y = taxa, col = regiao_pad)) + geom_line() +
facet_wrap(~capitulo, scales = "free_y", ncol = 4) + scale_x_continuous(breaks = seq(2019,2021,1)) +  theme_minimal() + theme(legend.position = "bottom") +
ggtitle("Óbitos por capítulos de CID-10", "Fonte: SIM - 2019, 2020, 2021")
View(cid10)
write.csv(sim_regioes, "sim_regioes.csv")
